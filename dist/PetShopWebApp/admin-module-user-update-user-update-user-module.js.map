{"version":3,"sources":["./src/app/admin/module/user/update-user/update-user-routing.module.ts","./src/app/admin/module/user/update-user/update-user.component.ts","./src/app/admin/module/user/update-user/update-user.component.html","./src/app/admin/module/user/update-user/update-user.module.ts","./src/app/service/role.service.ts"],"names":[],"mappings":"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","file":"admin-module-user-update-user-update-user-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { UpdateUserComponent } from './update-user.component';\n\nconst routes: Routes = [{ path: '', component: UpdateUserComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class UpdateUserRoutingModule { }\n","import { HttpResponse } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Role } from 'src/app/model/role';\nimport { UserSystem } from 'src/app/model/user-system';\nimport { RoleService } from 'src/app/service/role.service';\nimport { UserSystemService } from 'src/app/service/user-system.service';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-update-user',\n  templateUrl: './update-user.component.html',\n  styleUrls: ['./update-user.component.css']\n})\nexport class UpdateUserComponent implements OnInit {\n\n  userSystem: UserSystem | null = null;\n\n  submitted = false;\n  message?: string;\n\n  showAdminBoard = false;\n  showModeratorBoard = false;\n\n  roles: string[] = [];\n  listCheckRole: Role[] = [];\n  role: Role | null = null;\n\n  myForm = this.formBuilder.group({\n    id: ['', [Validators.required]],\n    email: ['', [Validators.required, Validators.email]],\n    fullName: ['', [Validators.required, Validators.maxLength(30)]],\n    gender: ['', Validators.required],\n    dateOfBirth: ['', Validators.required],\n    phone: ['', [Validators.required, Validators.maxLength(10), Validators.pattern('^[0-9]+$')]],\n    specificAddress: ['',[Validators.required, Validators.maxLength(255)]],\n    wards: ['', [Validators.required, Validators.maxLength(255)]],\n    district: ['', [Validators.required, Validators.maxLength(255)]],\n    province: ['', [Validators.required, Validators.maxLength(255)]]\n  });\n\n  constructor(\n    private formBuilder: FormBuilder, \n    protected userSystemService: UserSystemService,\n    protected roleService: RoleService,\n    private route: ActivatedRoute,\n    private router:Router\n  ) { }\n\n  ngOnInit(): void {\n    this.findById(this.route.snapshot.params.id);\n  }\n\n  get f() {\n    return this.myForm.controls;\n  }\n\n  findById(id: any): void {\n    this.userSystemService.findById(id).subscribe(\n      (res: HttpResponse<UserSystem>) => {\n        this.userSystem = res.body;\n        \n        if(this.userSystem) {\n          this.updateForm(this.userSystem);\n\n          this.userSystem.roles?.forEach((value) => {\n            this.roles.push(value.name || '');\n            this.listCheckRole.push(value);\n          });\n\n          this.showAdminBoard = this.roles.includes('ROLE_ADMIN');\n          this.showModeratorBoard = this.roles.includes('ROLE_USER');\n        }\n      }\n    );\n  }\n\n  updateForm(userSystem: UserSystem): void {\n    this.myForm.patchValue({\n      id: userSystem.id,\n      email: userSystem.email,\n      fullName: userSystem.fullName,\n      gender: userSystem.gender,\n      dateOfBirth: userSystem.dateOfBirth,\n      phone: userSystem.phone,\n      specificAddress: userSystem.specificAddress,\n      wards: userSystem.wards,\n      district: userSystem.district,\n      province: userSystem.province\n    });\n  }\n\n  onSubmit(): void {\n    this.submitted = true;\n\n    if (this.myForm.invalid) {\n      return;\n    }\n    \n    const formData: FormData = new FormData();\n\n    formData.append('userSystem', JSON.stringify(this.myForm.value));\n    formData.append('role', JSON.stringify(this.listCheckRole));\n\n    if(this.listCheckRole.length > 0) {\n      this.userSystemService.update(formData).subscribe(\n        response => {\n          this.message = response.body?.message;\n  \n          if(this.message === 'successfully') {\n            Swal.fire('Thông báo', 'Cập nhật thành công', 'success');\n            this.router.navigate(['home-admin/list-user']);\n          } else if(this.message === 'emailExisted') {\n            Swal.fire('Thông báo', 'Email đã tồn tại', 'error');\n          } else if(this.message === 'phoneExisted') {\n            Swal.fire('Thông báo', 'Số điện thoại đã tồn tại', 'error');\n          } else if(this.message === 'failed') {\n            Swal.fire('Thông báo', 'Cập nhật không thành công', 'error');\n          }\n        }\n      )\n    } else {\n      Swal.fire('Thông báo', 'Bạn chưa chọn quyền nào cho người dùng', 'error');\n    }\n  }\n\n  handleCheckBoxA(checked: boolean, value: string): void {\n    this.getValue(checked, value);\n  }\n\n  handleCheckBoxU(checked: boolean, value: string): void {\n    this.getValue(checked, value);\n  }\n\n  getValue(checked: boolean, value: string): void {\n    if(checked) {\n      this.roleService.findByName({name: value}).subscribe(\n        (res: HttpResponse<Role>) => {\n          this.role = res.body;\n\n          if(this.role) {\n            this.listCheckRole.push(this.role);\n          }\n        }\n      );      \n    } else {\n      this.listCheckRole?.forEach((item, index) => {\n        if (item.name === value) {\n          this.listCheckRole.splice(index, 1);\n        }\n      });\n    }\n  }\n\n  onBack(): void {\n    window.history.back();\n  }\n\n}\n","<div class=\"row justify-content-center mt-2 mb-2\">\n    <div class=\"col-sm-8\">\n        <h3 style=\"color: grey;\">Cập nhật tài khoản</h3>\n\n        <form class=\"row g-3\" (ngSubmit)=\"onSubmit()\" [formGroup]=\"myForm\">\n            <div class=\"col-sm-12\" [hidden]=\"true\">\n                <input type=\"email\" class=\"form-control\" formControlName=\"id\" readonly>\n            </div>\n            <div class=\"col-sm-6\">\n                <label for=\"email\" class=\"form-label\">Email</label>\n                <input type=\"email\" class=\"form-control\" placeholder=\"Nhập email\" formControlName=\"email\" [ngClass]=\"{ 'is-invalid': submitted && f.email.errors}\">\n\n                <div *ngIf=\"submitted && f.email.invalid\" class=\"invalid-feedback\">\n                    <div *ngIf=\"f.email.errors?.required\">Bạn chưa nhập email</div>\n                    <div *ngIf=\"f.email.errors?.email\">Email không đúng định dạng</div>\n                </div>\n            </div>\n\n            <div class=\"col-sm-6\">\n                <label for=\"fullName\" class=\"form-label\">Họ tên</label>\n                <input type=\"text\" class=\"form-control\" placeholder=\"Nhập họ tên\" formControlName=\"fullName\" [ngClass]=\"{ 'is-invalid': submitted && f.fullName.errors}\">\n\n                <div *ngIf=\"submitted && f.fullName.invalid\" class=\"invalid-feedback\">\n                    <div *ngIf=\"f.fullName.errors?.required\">Bạn chưa nhập họ tên</div>\n                    <div *ngIf=\"f.fullName.errors?.maxlength\">Họ tên phải nhỏ hơn 50 ký tự</div>\n                </div>\n            </div>\n\n            <div class=\"col-sm-6\">\n                <label for=\"dateOfBirth\" class=\"form-label\">Ngày sinh</label>\n                <input type=\"date\" class=\"form-control\" formControlName=\"dateOfBirth\" [ngClass]=\"{ 'is-invalid': submitted && f.dateOfBirth.errors}\">\n\n                <div *ngIf=\"submitted && f.dateOfBirth.invalid\" class=\"invalid-feedback\">\n                    <div *ngIf=\"f.dateOfBirth.errors?.required\">Bạn chưa nhập ngày sinh</div>\n                </div>\n            </div>\n\n            <div class=\"col-sm-6\">\n                <label for=\"phone\" class=\"form-label\">Số điện thoại</label>\n                <input type=\"text\" class=\"form-control\" placeholder=\"Nhập số điện thoại\" formControlName=\"phone\" [ngClass]=\"{ 'is-invalid': submitted && f.phone.errors}\">\n\n                <div *ngIf=\"submitted && f.phone.invalid\" class=\"invalid-feedback\">\n                    <div *ngIf=\"f.phone.errors?.required\">Bạn chưa nhập số điện thoại</div>\n                    <div *ngIf=\"f.phone.errors?.pattern\">Số điện thoại không đúng định dạng</div>\n                </div>\n            </div>\n\n            <div class=\"col-sm-12\">\n                <label for=\"gender\" class=\"form-label\">Giới tính</label>&nbsp;\n                <input type=\"radio\" formControlName=\"gender\" [ngClass]=\"{ 'is-invalid': submitted && f.gender.errors}\" value=\"Nam\"> Nam\n\n                <input type=\"radio\" formControlName=\"gender\" [ngClass]=\"{ 'is-invalid': submitted && f.gender.errors}\" value=\"Nữ\"> Nữ\n\n                <div *ngIf=\"submitted && f.gender.invalid\" class=\"invalid-feedback\">\n                    <div *ngIf=\"f.gender.errors?.required\">Bạn chưa chọn giới tính</div>\n                </div>\n            </div>\n\n            <div class=\"col-sm-12\">\n                <label for=\"specificAddress\" class=\"form-label\">Địa chỉ nhà</label>\n                <input type=\"text\" class=\"form-control\" placeholder=\"Nhập số nhà - ngõ - tên đường\" formControlName=\"specificAddress\" [ngClass]=\"{ 'is-invalid': submitted && f.specificAddress.errors}\">\n\n                <div *ngIf=\"submitted && f.specificAddress.invalid\" class=\"invalid-feedback\">\n                    <div *ngIf=\"f.specificAddress.errors?.required\">Bạn chưa nhập địa chỉ nhà</div>\n                    <div *ngIf=\"f.specificAddress.errors?.maxlength\">Địa chỉ nhà phải nhỏ hơn 255 ký tự</div>\n                </div>\n            </div>\n\n            <div class=\"col-sm-6\">\n                <label for=\"wards\" class=\"form-label\">Xã/Phường/Thị Trấn</label>\n                <input type=\"text\" class=\"form-control\" placeholder=\"Nhập tên Xã/Phường/Thị Trấn\" formControlName=\"wards\" [ngClass]=\"{ 'is-invalid': submitted && f.wards.errors}\">\n\n                <div *ngIf=\"submitted && f.wards.invalid\" class=\"invalid-feedback\">\n                    <div *ngIf=\"f.wards.errors?.required\">Bạn chưa nhập tên xã/phường/thị trấn</div>\n                    <div *ngIf=\"f.wards.errors?.maxlength\">Tên xã/phường/thị trấn phải nhỏ hơn 255 ký tự</div>\n                </div>\n            </div>\n\n            <div class=\"col-sm-6\">\n                <label for=\"district\" class=\"form-label\">Quận/Huyện</label>\n                <input type=\"text\" class=\"form-control\" placeholder=\"Nhập tên Quận/Huyện\" formControlName=\"district\" [ngClass]=\"{ 'is-invalid': submitted && f.district.errors}\">\n\n                <div *ngIf=\"submitted && f.district.invalid\" class=\"invalid-feedback\">\n                    <div *ngIf=\"f.district.errors?.required\">Bạn chưa nhập tên quận/huyện</div>\n                    <div *ngIf=\"f.district.errors?.maxlength\">Tên quận/huyện phải nhỏ hơn 255 ký tự</div>\n                </div>\n            </div>\n\n            <div class=\"col-sm-12\">\n                <label for=\"province\" class=\"form-label\">Tỉnh/Thành Phố</label>\n                <input type=\"text\" class=\"form-control\" placeholder=\"Nhập tên Tỉnh/Thành Phố\" formControlName=\"province\" [ngClass]=\"{ 'is-invalid': submitted && f.province.errors}\">\n\n                <div *ngIf=\"submitted && f.province.invalid\" class=\"invalid-feedback\">\n                    <div *ngIf=\"f.province.errors?.required\">Bạn chưa nhập tên tỉnh/thành phố</div>\n                    <div *ngIf=\"f.province.errors?.maxlength\">Tên tỉnh/thành phố phải nhỏ hơn 255 ký tự</div>\n                </div>\n            </div>\n\n            <div class=\"col-12\">\n                <div class=\"form-check\">\n                    <input type=\"checkbox\" class=\"form-check-input\" value=\"ROLE_ADMIN\" [checked]=\"showAdminBoard\" (change)=\"handleCheckBoxA(checkboxA.checked, checkboxA.value)\" #checkboxA id=\"gridCheck1\">\n                    <label class=\"form-check-label\" for=\"gridCheck1\">\n                        Admin\n                    </label>\n                </div>\n\n                <div class=\"form-check\">\n                    <input type=\"checkbox\" class=\"form-check-input\" value=\"ROLE_USER\" [checked]=\"showModeratorBoard\" (change)=\"handleCheckBoxU(checkboxB.checked, checkboxB.value)\" #checkboxB id=\"gridCheck2\">\n                    <label class=\"form-check-label\" for=\"gridCheck2\">\n                        User\n                    </label>\n                </div>\n            </div>\n\n            <div class=\"col-12\">\n                <button type=\"submit\" class=\"btn btn-primary\">Cập nhật thông tin</button>\n                <button type=\"button\" class=\"btn btn-secondary ms-2 ml-1\" (click)=\"onBack()\">Quay lại</button>\n            </div>\n        </form>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { UpdateUserRoutingModule } from './update-user-routing.module';\nimport { UpdateUserComponent } from './update-user.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n\n@NgModule({\n  declarations: [UpdateUserComponent],\n  imports: [\n    CommonModule,\n    UpdateUserRoutingModule,\n    FormsModule, \n    ReactiveFormsModule\n  ]\n})\nexport class UpdateUserModule { }\n","import { HttpClient, HttpResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { Role } from '../model/role';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RoleService {\n\n  public api = environment.api + 'api/role/'\n\n  constructor(private http: HttpClient) { }\n\n  findByName(req: any): Observable<HttpResponse<Role>> {\n    return this.http.get<Role>(this.api + \"role-name\", {params: req, observe: 'response'});\n  }\n}\n"],"sourceRoot":"webpack:///"}